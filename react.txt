1.在React应用中，数据通过props的传递，从父组件流向子组件
2.在react中，我们为了比面this造成的困扰，使用箭头函数进行事件处理。
3.改变数据的两种方式：1.直接修改数据 2.使用对象展开语法或者使用Object.assign()
4.react中调用方法不需要在方法后面写（）
5.在react中解决this的指向问题，使用bind和箭头函数进行解决
6.愿你指下有代码，眼里有星辰
7.react的开发者工具，如果在生产版本的，图标会变成深色，如果在开发模式，图标会变成红色，推荐在开发应用时使用开发模式，而在为用户部署应用时使用生产模式。
8.多喝热水，才华烫嘴。
9.可以使用createReactClass（）方法创建组件，需要提供一个单独的getInitialState方法，让其返回初始state。
Hook：

1.userState  // userState(a) a的值表示初始值，setCount表示设置之后的值
  // setState是一个固定值，不能进行变化，相当于组件中的state
    // 声明多个 state 变量！
    // const [age, setAge] = useState(42);
    // const [fruit, setFruit] = useState('banana');
    // const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);

2.useEffect // useEffect() 相当于componentDidMount(),componentDidUpdate()
也可以进行多次调用
Hook使用规则：
1.只能在函数最外层调用Hook，不要在循环，条件判断或者子函数中进行调用
2.只能在React的函数组件中调用Hook。不要在其他JavaScript函数中调用。
为什么叫useState而不叫createState？
1.“Create”可能不是很准确，因为state只在组件首次渲染的时候被创建。在下一次重新渲染时，useState返回给我们当前的state
否则它就不是“state”了，这也是Hook的名字总是以use开头的一个原因。
为什么要在effect中返回一个函数？这是effect可选的清除机制。每个effect都可以返回一个清除函数。如此可以将添加和移除订阅的逻辑放在一起，它们都属于effect的一部分。
React何时清除effect？React会在组件卸载的时候执行清除操作。
React怎么知道哪个State对应哪个useState？ React靠的是Hook调用的顺序。
自定义Hook必须以“use”开头吗？必须如此，这个约定非常重要。不遵循的话，由于无法判断某个函数是否包含对其内部Hook的调用，React将无法自动检查你的Hook是否违反了Hook的规则。
在两个组件中使用相同的Hook会共享state吗？不会。自定义Hook是一种重用状态逻辑的机制（如设置为订阅并存储当前值），所以每次使用自定义Hook时，其中的所有state和副作用都是完全隔离的。
本身Hook就是函数。


