1.2 核心框架
本项目采用前端主流构建用户界面的渐进式框架Vue.js。

1.2.1  框架简介
Vue被设计为可以自底向上逐层应用。Vue的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue也完全能够为复杂的单页应用提供驱动。

1.2.2  选用理由
1、 支持前后端分离开发，提升开发效率。
2、 丰富的基于Vue的开源项目，可用于开发使用和参考。
3、 国内使用Vue的开发者众多，文档完善，方便开发和查找问题。
4、 与公司其他相关前端项目技术栈保持一致，方便可用功能集成和扩

1.3 状态管理
本项目状态管理采用Vuex，Vuex是专为 Vue.js应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。

1.4 路由映射
本项目状态管理采用vue-router，Vue Router是Vue.js官方的路由管理器。它和Vue.js的核心深度集成，让构建单页面应用变得易如反掌。包含的功能有：
?	嵌套的路由/视图表
?	模块化的、基于组件的路由配置
?	路由参数、查询、通配符
?	基于Vue.js过渡系统的视图过渡效果
?	细粒度的导航控制
?	带有自动激活的CSS class的链接
?	HTML5历史模式或hash模式，在IE9中自动降级
?	自定义的滚动条行

1.6 UI组件库
本项目UI组件库为Element，与公司其他相关项目采用同样的基础UI组件库，保持页面风格与交互的基本一致。该组件库中包含管理系统常用的交互组件，使用方便，且可以根据个性化的UI风格进行定制。可以很大程度上提升开发效率，和系统的可维护性、稳定性、可扩展性。

1.7 异步数据交互库
本项目异步数据交互库为axios，为Vue官方推荐的ajax库，优点在于同时支持node服务端，并提供了全面的封装和完善的文档。

1.8 CSS的预处理框架
本项目CSS的预处理框架为Scss，意在提高页面UI样式的开发效率。Scss是一款强化CSS的辅助工具，它在CSS语法的基础上增加了变量(variables)、嵌套(nested rules)、混合(mixins)、导入(inline imports)等高级功能，这些拓展令CSS更加强大与优雅。使用Scss有助于更好地组织管理样式文件，以及更高效地开发项目。

1.9 资源加载打包工具
本项目资源加载打包工具为webpack，webpack是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个bundle。目前主流的前端项目均采用webpack作为基础的开发工具。

1.10  代码规范
1.10.1 JS规范
本项目代码规范工具为Eslint，ESLint是一个开源的JavaScript代码检查工具，代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码风格。对大多数编程语言来说都会有代码检查，一般来说编译程序会内置检查工具。
JavaScript是一个动态的弱类型语言，在开发中比较容易出错。因为没有编译程序，为了寻找JavaScript代码错误通常需要在执行过程中不断调试。像ESLint这样的可以让程序员在编码的过程中发现问题而不是在执行的过程中。

1.10.2 样式规范
样式规范建议采用BEM命名规范。BEM的意思就是块（block）、元素（element）、修饰符（modifier）,是由Yandex团队提出的一种前端命名方法论。这种巧妙的命名方法让CSS类更加透明而且更有意义。BEM命名约定更加严格，而且包含更多的信息，它们用于一个团队开发一个耗时的大项目

1.11 包管理工具
本项目包管理工具为npm，是nodejs自带的包管理工具，对于不同开发者对包管理工具没有统一要求，也可采用cnpm、yarn等工具。

1.12 图表框架Echarts
Ehcarts是目前前端数据可视化主流框架，文档全，开发方便，此外Echarts的图表丰富，可以适用各种各样的功能；而ve-charts是在Echarts的基础上进行升级封装，更适合vue的开发模式；